#!/bin/bash

create_dir() {
    if [ ! -d /var/lib/dkim/$1 ]; then
        echo "$1: creating key directory /var/lib/dkim/$1"
        install -o opendkim -g mail -m 750 -d /var/lib/dkim/$1
    fi
}

create_new_key() {
    if [ ! -f /var/lib/dkim/$1/$2.private ]; then
        echo "$1: creating key /var/lib/dkim/$1/$2.private"
        opendkim-genkey -D /var/lib/dkim/$1 -d $1 -s $2 -r
        chown opendkim.mail /var/lib/dkim/$1/$2.*
    fi
}

gen_zonefile() {
    echo "$1: creating zone file fragment"
    find /var/lib/dkim/$1 -name '*.txt' \
        | sort \
        | xargs cat \
        > /var/lib/dns/$1.dkim.zone
}

gen_key_table() {
    echo "generating key table"
    find /var/lib/dkim -name '*.private' \
        | { while read fn ; do
                dom=$(sed 's_/var/lib/dkim/\(.*\)/.*\.private_\1_' <<< "$fn")
                tag=$(sed 's_/var/lib/dkim/.*/\(.*\)\.private_\1_' <<< "$fn")
                printf '%-31s %s:%s:%s\n' "$dom-$tag" "$dom" "$tag" "$fn"
            done ; } \
        | sort \
        > /var/lib/dkim/key.table
}

gen_signing_table() {
    echo "generating signing table"
    find /var/lib/dkim -mindepth 1 -type d \
        | { while read dn ; do
                dom=$(sed 's_/var/lib/dkim/__' <<< "$dn")
                tag=$(ls -tR $dn/*.txt | head -1 | sed "s_/var/lib/dkim/$dom/__; s_\\.txt__")
                printf '%-31s %s\n' "*@$dom" "$dom-$tag"
            done ; } \
        | sort \
        > /var/lib/dkim/signing.table
}

[ "$DEBUG" = 1 ] && set -x

exec &> >(logger -t $(basename $0))

if [ $# -eq 0 ]; then
    set -- $ZONES
fi

if [ $# -eq 0 ]; then
    echo "error: missing hostnames" >&2
    exit 1
fi

for zone in "$@"; do
    create_dir "$zone"
    create_new_key "$zone" $(date +%Y%m)
    gen_zonefile "$zone"
done

gen_key_table
gen_signing_table

pkill -USR1 1
